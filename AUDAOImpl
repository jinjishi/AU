package intership2.dao;
import java.sql.SQLException;
import java.util.ArrayList;

import intership2.dao.DbcpJdbcUtil;
import intership2.dao.AU;
import java.sql.Connection; 
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.lang.Exception;
public class AUDAOImpl implements AUDAO {
	public boolean addAU(AU au) throws Exception {
		boolean result=false;
		Connection connection = null; 
		PreparedStatement pStatement = null; 
		try { 
			connection = DbcpJdbcUtil.getConnection(); 
		    String sql = "use shopping insert into AU(Address,Consignee,Nickname) values (?,?,?)";
		    pStatement = connection.prepareStatement(sql);
			pStatement.setString(1,au.GetterAddress()); 
		    pStatement.setString(2,au.GetterConsignee()); 
		    pStatement.setString(3,au.GetterNickname()); 
		    pStatement.execute(); 
		    result=true;
		    System.out.println("result="+result);
		    pStatement.close(); 
		} catch (SQLException e) { 
			e.printStackTrace();
			result=false;
			} finally { 
				try { 
					connection.close();
					} catch (SQLException e) { 
						e.printStackTrace();
						}
				}
		return result;
		}
	public boolean delAU(String sql) throws Exception {
		boolean result=false;
		Connection connection = null; 
		PreparedStatement pStatement = null; 
		try {
			connection = DbcpJdbcUtil.getConnection(); 
			pStatement = connection.prepareStatement(sql); 
			pStatement.execute();  
			int count=pStatement.getUpdateCount();
			if(count!=-1) {
				result=true;
			}
			else {
				result=false;
			}
			System.out.println("result="+result);
		}catch (SQLException e) { 
			e.printStackTrace();
			result=false;
			} finally { 
				try { 
					connection.close();
					} catch (SQLException e) { 
						e.printStackTrace();
						}
				}
		return result;
		}
	public ArrayList<AU> getAU(String sql) throws Exception{
		PreparedStatement pStatement = null; 
		Connection connection = null;
		ArrayList<AU> aus=new ArrayList<AU>();
		boolean result=false;
		try {
			connection = DbcpJdbcUtil.getConnection(); 
		    pStatement =connection.prepareStatement(sql);
			ResultSet rs=pStatement.executeQuery();
			while(rs.next()) {
				AU au=new AU();
				au.SetterAddress(rs.getString(1));
				au.SetterConsignee(rs.getString(2));
				au.SetterNickname(rs.getString(3));
				System.out.printf(au.GetterAddress()+"\t");
				System.out.printf(au.GetterConsignee()+"\t");
				System.out.printf(au.GetterNickname()+"\n");
			}
			result=true;
			System.out.println("result="+result);
		}catch (SQLException e) { 
			e.printStackTrace();
			} 
				try { 
					connection.close();
					} catch (SQLException e) { 
						e.printStackTrace();
						}
				return aus;
				}
	@SuppressWarnings("null")
	public boolean updateAU(String sql) throws Exception
	{
		Connection connection = null;
		PreparedStatement pStatement = null; 
		boolean result=false;
		try {
			connection = DbcpJdbcUtil.getConnection(); 
			pStatement=connection.prepareStatement(sql);
			pStatement.execute();  
			int count=pStatement.getUpdateCount();
			if(count!=-1)
			{
				result=true;
			}
			else
			{
				result=false;
			}
			System.out.println("result="+result);
		}catch (SQLException e) { 
				e.printStackTrace();
				result=false;
				} finally { 
					try { 
						connection.close();
						} catch (SQLException e) { 
							e.printStackTrace();
							}
					}
			return result;
			}
	}

